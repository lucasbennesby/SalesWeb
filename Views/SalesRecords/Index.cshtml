@using System.Globalization
@using SalesWeb.Models

@model IEnumerable<SalesWeb.Models.SalesRecord>

@{
    ViewData["Title"] = "SalesRecord";
}

<h1>@ViewData["Title"]</h1>


<p><a class="btn btn-warning" asp-controller="SalesRecords" asp-action="Create">Create New</a></p>

<div class="col-12 row">
    <form role="search" class="card mb-2 col-3" >
        <h4 class="text-center mt-2">Filter by date</h4>
        <div class="form-group card-body ">
            <div class="form-group ">
                <label for="minDate">Min Date</label>
                <input value=@ViewData["minDate"] type="date" class="form-control" name="minDate" />
            </div>
            <div class="form-group">
                <label for="maxDate">Max Date</label>
                <input value=@ViewData["maxDate"] type="date" class="form-control" name="maxDate" />
            </div>
        </div>
        <button type="submit" class="btn btn-primary m-3">Filter</button>
    </form>
    <form role="search" class="card mb-2 col-3" asp-action="Index">
        <h4 class="text-center mt-2">Filter by seller</h4>
        <div class="form-group card-body">
            <div class="form-group">
                <label  class="control-label">Seller</label>
                @Html.DropDownList("sId", new SelectList(ViewBag.Sellers, "Id", "Name"), "Select a seller", new { @class = "form-control" })
            </div>
        </div>
        <button type="submit" class="btn btn-primary m-3">Filter</button>
    </form> 
    <form role="search" class="card mb-2 col-3" asp-action="Index">
        <h4 class="text-center mt-2">Filter by status</h4>
        <div class="form-group card-body">
            <div class="form-group">
                <label class="control-label">Status</label>
                @Html.DropDownList("status", new SelectList(ViewBag.Status, "Id", "Name"), "Select a status", new { @class = "form-control" })
            </div>
        </div>
        <button type="submit" class="btn btn-primary m-3">Filter</button>
    </form>
    <form role="search" class="card mb-2 col-3" asp-action="Index">
        <h4 class="text-center mt-2">Filter by department</h4>
        <div class="form-group card-body">
            <div class="form-group">
                <label class="control-label">Status</label>
                @Html.DropDownList("dId", new SelectList(ViewBag.Departments, "Id", "Name"), "Select a department", new { @class = "form-control" })
            </div>
        </div>
        <button type="submit" class="btn btn-primary m-3">Filter</button>
    </form>
</div>



<table class="table table-striped table-hover">
    <thead class="table-success">
        <tr>            
            <th>
                Amount sum: R$ @Model.Sum(obj=>obj.Amount).ToString("n2")              
            </th>
        </tr>
    </thead>
    <thead class="table-dark ">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Date)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Amount)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Seller.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Seller.Department)
            </th>
            <th class="text-center">
                Actions
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Date)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Amount)
                </td>
                <td>
                    <span class="@GetStatusColor(item.Status) fw-bold"> @Html.DisplayFor(modelItem => item.Status)</span>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Seller.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Seller.Department.Name)
                </td>
                <td class="text-center">
                    <a class="btn btn-outline-warning" asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                    <a class="btn btn-outline-success" asp-controller="SalesRecords" asp-action="Details" asp-route-id="@item.Id">Details</a>
                    <a class="btn btn-outline-danger" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                    

                </td>
            </tr>
        }
    </tbody>
</table>
@if (ViewBag.Message != null)
{
    <h3 class="alert alert-warning text-center text-dark">@ViewBag.Message</h3>
}

@functions {
    // Método para obter a classe de cor baseada no status
    string GetStatusColor(SalesWeb.Models.Enums.SaleStatus status)
    {
        switch (status)
        {
            case SalesWeb.Models.Enums.SaleStatus.Pending:
                return "text-warning";
            case SalesWeb.Models.Enums.SaleStatus.Billed:
                return "text-success";
            case SalesWeb.Models.Enums.SaleStatus.Canceled:
                return "text-danger";
            default:
                return ""; // caso padrão, sem classe específica
        }
    }
}